== Capítulo 1 - O que é Bitcoin?
* Histórico de Bitcoin atualizado
* Mais histórias de usuários e atualizações
* Mais exemplos de clientes e usos de bitcoins
* Guia atualizado sobre como obter, usar e gastar bitcoin

== Capítulo 2 - Como o Bitcoin Funciona
* Muitas pequenas mudanças, atualizações e melhorias

== Capítulo 3 - Bitcoin Core
* Exemplos e códigos aprimorados e atualizados
* Opções e exemplos de configuração
* Executando um nó de bitcoin
* Bibliotecas atualizadas

== Capítulo 4 - Chaves e Endereços

* Muitas pequenas melhorias
* Diagramas aprimorados e novos

== Capítulo 5 - Carteiras

* Muito mais detalhes sobre as palavras de código mnemônicas BIP39
* Frases-senhas e casos de uso BIP39
* Usando chaves estendidas públicas em um servidor de comércio eletrônico
* Diagramas aprimorados e novos

== Capítulo 6 - Transações

* Estrutura de Transação
  * Mais detalhes sobre entradas e saídas
  * Serialização/desserialização da transação

* Taxas de Transação
  * Taxas dinâmicas
  * Estimativa de taxas
  * Serviços de estimativa de taxas de terceiros

* Assinaturas Digitais
  * Criação e verificação de assinatura
  * Serialização de assinatura (codificação DER)
  * Sinalizadores SIGHASH
  * Visão geral do ECDSA Math


== Capítulo 7

* Bloqueio de Tempo
  * Nível de transação absoluto (nLocktime)
  * Nível UTXO/Script absoluto (CHECKLOCKTIMEVERIFY)
  * Nível de entrada relativo (nSequence)
  * Relativo ao nível de UTXO/Script (CHECKSEQUENCEVERIFY)
* Tempo Médio Passado
* Defesa de bloqueio de tempo contra cobrança de taxas
* Controle de Fluxo de Script
* Cláusulas de proteção VERIFY
* Cláusulas de proteção de bloqueio de tempo
* Script Complexo (exemplo e análise)

== Capítulo 8

* Redes de retransmissão
* Melhorias de nó SPV
* Filtros Bloom e SPV
* Nós SPV e privacidade
* Conexões Criptografadas e Autenticadas (BIP150/151)

== Capítulo 9

* Árvores Merkle e SPV
* Blockchains de teste
  * Testnet
  * Usando testnet
  * Segnet
  * Regtest
  * Usando regtest
* Desenvolvimento com blockchains de teste

== Capítulo 10

* Hard forks, soft forks e signaling
* Hard forks divergentes
* Soft forks para atualizações de recursos
* Sinalização soft forks com versão em bloco
* Sinalização e ativação BIP-9 (versionbits)
* Desenvolvimento de software de consenso

== Capítulo 11

* Princípios de segurança

== Capítulo 12 (todo novo capítulo)

* Aplicativo Blockchain
* Blocos de construção da plataforma de confiança
* Construindo aplicativos de blockchain
* Moedas Coloridas
* Contraparte
* Canais de pagamento
 * Exemplo de streaming de vídeo
 * Canais de pagamento Timelock
 * Compromissos revogáveis ​​assimétricos
 * Hash Time Locked Contracts (HTLC)
* Rede Relâmpago
 * Canais de pagamento roteados
 * Roteamento de Transporte e Onion
 * Benefícios da Rede Relâmpago

== Apêndice - Testemunha Segregada (todos os novos capítulos)

* Introdução à Segregated Witness (Testemunha Segregada)
* Por que segwit?
* Transações, saídas e scripts Segwit
  * P2WPKH
  * P2WSH
* segwit aninhado
  * Considerações para compatibilidade com versões anteriores
  * P2SH(P2WPKH)
  * P2SH(P2WSH)
* Identificadores de Transação (txid) e Correção de Maleabilidade
* Novo Algoritmo de Assinatura
* Incentivos Econômicos para Segwit
